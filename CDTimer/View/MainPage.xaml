<Page
    x:Class="CDTimer.View.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local1="using:PresenTimer.Common"
    xmlns:local="using:CDTimer.View"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">


    <!-- Resource -->
    <Page.Resources>


        <Style x:Key="ListViewItemStyle1" TargetType="ListViewItem">
            <Setter Property="BorderBrush" Value="Gray"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <!-- 他のプロパティは省略 -->
        </Style>


        <Flyout x:Key="myColorPickerFlyout">
            <RelativePanel>
                <ColorPicker x:Name="myColorPickerx"
                         IsColorChannelTextInputVisible="False"
                         IsHexInputVisible="False" ColorChanged="myColorPicker_ColorChanged" 
                             Color="Green"
                             />

                <Grid RelativePanel.Below="myColorPicker"
                  RelativePanel.AlignLeftWithPanel="True"
                  RelativePanel.AlignRightWithPanel="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Content="OK" 
                        Margin="0,12,2,0" HorizontalAlignment="Stretch" Click="Button_Click"/>
                    <Button Content="Cancel" 
                        Margin="2,12,0,0" HorizontalAlignment="Stretch"
                        Grid.Column="1"/>
                </Grid>
            </RelativePanel>
        </Flyout>

    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <!-- <Grid Background="{ThemeResource SystemControlChromeMediumAcrylicWindowMediumBrush}">-->

        <RelativePanel HorizontalAlignment="Center" VerticalAlignment="Center"  >
            <TextBlock x:Name="infoBlock" Grid.Row="1" x:Uid="LabelTitle" Text="{x:Bind ViewModel.TitleBlock, Mode=OneWay}"
                  Foreground="{x:Bind ViewModel.ForegroundColor, Mode=OneWay}" FontSize="100" />
            <TextBlock x:Name="timeBlock" Grid.Row="2"  Text="{x:Bind ViewModel.LabelTime, Mode=OneWay}" FontSize="200" 
                 Foreground="{x:Bind ViewModel.ForegroundColor, Mode=OneWay}" RelativePanel.Below="infoBlock"/>
        </RelativePanel>

        <SplitView x:Name="settingSplitView"
                   IsPaneOpen="{Binding IsChecked, ElementName=settingButton, Mode=TwoWay}"
                   DisplayMode="CompactOverlay"
                   PanePlacement="Left"
                   CompactPaneLength ="0"
                   OpenPaneLength="350"
                   >
            <SplitView.Pane>
                <ScrollViewer Margin="0,0,0.0,50">


                    <!--SystemControlAccentDark1AcrylicWindowAccentDark1Brush-->
                    <StackPanel >
                        <TextBlock x:Uid="PreviewTitle" Text="テスト再生(10倍速)?" FontSize="30" HorizontalAlignment="Left"  />
                        <StackPanel Background="Black">
                            <TextBlock x:Name="titleBlock"  Text="{x:Bind ViewModel.TitleBlock, Mode=OneWay}" FontSize="36" Foreground="{x:Bind ViewModel.ForegroundColor, Mode=OneWay}" HorizontalAlignment="Center"/>
                            <TextBlock x:Name="lblTime" Text="{x:Bind ViewModel.LabelTime, Mode=OneWay}" Foreground="{x:Bind ViewModel.ForegroundColor, Mode=OneWay}" FontSize="36" HorizontalAlignment="Center" />

                            <CommandBar HorizontalAlignment="Center" DefaultLabelPosition="Right">
                                <AppBarButton x:Name="previewStart" x:Uid="Start" Label="Start" ToolTipService.ToolTip="test" Icon="Play" Click="previewStart_Click"  />
                                <AppBarButton x:Name="previewStop" x:Uid="Stop" Label="Stop" Icon="Stop" Click="previewStop_Click"  />
                                <AppBarButton x:Name="previewReset" x:Uid="Reset" Label="Reset" Icon="Refresh" Click="previewReset_Click"  />
                            </CommandBar>

                        </StackPanel>



                        <StackPanel>
                            <!--
                        <Grid.RowDefinitions>
                            <RowDefinition Height="50" />
                            <RowDefinition Height="100" />
                            <RowDefinition Height="100"/>
                            <RowDefinition Height="100"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="2.8*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            
                            
                            
                            
                            
                            
                        -->

                            <ListView SelectionMode="None" Header="スタート" FontSize="20"  Margin="0,0,0,10">

                                <ToggleSwitch OffContent="昇順" OnContent="降順" IsOn="{x:Bind ViewModel.UporDown, Mode=TwoWay}"/>
                                <TextBox x:Name="startText" x:Uid="StartTitle" Text="{x:Bind ViewModel.StartTitle, Mode=TwoWay}" Header="ラベルを設定してください?" Width="300" HorizontalAlignment="Left"/>

                                <ComboBox x:Name="colorCombo0" SelectedIndex="{x:Bind ViewModel.ColorsIndex0, Mode=TwoWay}" x:Uid="ColorInput" Header="!文字色の設定" >
                                    <ComboBoxItem Content="Green" Foreground="Green"/>
                                    <ComboBoxItem Content="Yellow" Foreground="Yellow"/>
                                    <ComboBoxItem Content="Red" Foreground="Red"/>
                                </ComboBox>

                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="colorPickerButton0" Content="文字色の切替" >
                                        <Button.Flyout>
                                            <Flyout>
                                                <ColorPicker x:Name="myColorPicker0" IsColorChannelTextInputVisible="False"
                                                    IsHexInputVisible="False" ColorChanged="myColorPicker_ColorChanged" Color="{x:Bind ViewModel.LabelColor0, Mode=TwoWay}" />
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>
                                    <TextBlock Text="サンプル" FontSize="20" Foreground="{x:Bind ViewModel.LabelColor0, Converter={StaticResource Color2BrushConverter}, Mode=OneWay}"/>
                                </StackPanel>

                            </ListView>

                            <ListView SelectionMode="None" Header="一回目のベル" FontSize="20"  Margin="0,0,0,10" >

                                <StackPanel Orientation="Horizontal" >
                                    <ComboBox x:Name="bellFirst" SelectedItem="{x:Bind ViewModel.PreBellIndex, Mode=TwoWay}" ></ComboBox>
                                    <TextBlock Text="回" VerticalAlignment="Bottom" FontSize="20"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" >
                                    <ComboBox x:Name="timeFirst" SelectedItem="{x:Bind ViewModel.TimesIndex, Mode=TwoWay}"></ComboBox>
                                    <TextBlock Text="秒後" VerticalAlignment="Bottom" FontSize="20"/>
                                </StackPanel>
                                <TextBox x:Name="firstText" x:Uid="FirstTitle" Text="{x:Bind ViewModel.FirstTitle, Mode=TwoWay}" Header="ラベルを設定してください?" Width="300" HorizontalAlignment="Left"/>
                                <ComboBox x:Name="colorCombo" SelectedIndex="{x:Bind ViewModel.ColorsIndex, Mode=TwoWay}" x:Uid="ColorInput" Header="!文字色の設定" >
                                    <ComboBoxItem Content="Green" Foreground="Green"/>
                                    <ComboBoxItem Content="Yellow" Foreground="Yellow"/>
                                    <ComboBoxItem Content="Red" Foreground="Red"/>
                                </ComboBox>

                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="colorPickerButton1" Content="文字色の切替" >
                                        <Button.Flyout>
                                            <Flyout>
                                                <ColorPicker x:Name="myColorPicker1" IsColorChannelTextInputVisible="False"
                                                    IsHexInputVisible="False" ColorChanged="myColorPicker_ColorChanged" Color="{x:Bind ViewModel.LabelColor1, Mode=TwoWay}" />
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>
                                    <TextBlock Text="サンプル" FontSize="20" Foreground="{x:Bind ViewModel.LabelColor1, Converter={StaticResource Color2BrushConverter}, Mode=OneWay}"/>
                                    <!--ViewModel.LabelBrush1-->
                                </StackPanel>

                            </ListView>

                            <ListView SelectionMode="None" Header="二回目のベル" FontSize="20" Margin="0,0,0,10">

                                <ComboBox x:Name="bellSecond" SelectedItem="{x:Bind ViewModel.EndBellIndex, Mode=TwoWay}" ></ComboBox>
                                <ComboBox x:Name="timeSecond" SelectedItem="{x:Bind ViewModel.TimesIndex2, Mode=TwoWay}"></ComboBox>
                                <TextBox x:Name="secondText" x:Uid="SecondTitle" Text="{x:Bind ViewModel.SecondTitle, Mode=TwoWay}" Header="!タイトルを入力" HorizontalAlignment="Left" Width="300"/>

                                <ComboBox x:Name="colorCombo2" Margin="0,10,0,0" SelectedIndex="{x:Bind ViewModel.ColorsIndex2, Mode=TwoWay}" x:Uid="ColorInput" Header="文字色を設定します" >


                                    <ComboBoxItem Content="Green" Foreground="Green"/>
                                    <ComboBoxItem Content="Yellow" Foreground="Yellow"/>
                                    <ComboBoxItem Content="Red" Foreground="Red"/>
                                </ComboBox>

                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="colorPickerButton2" Content="文字色の選択" >
                                        <Button.Flyout>
                                            <Flyout>
                                                <ColorPicker x:Name="myColorPicker2" IsColorChannelTextInputVisible="False"
                                                    IsHexInputVisible="False" ColorChanged="myColorPicker_ColorChanged" Color="{x:Bind ViewModel.LabelColor2, Mode=TwoWay}" />
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>
                                    <TextBlock Text="サンプル" FontSize="20" Foreground="{x:Bind ViewModel.LabelColor2, Converter={StaticResource Color2BrushConverter}, Mode=OneWay}"/>
                                </StackPanel>


                            </ListView>






                            <!-- 
                            <TextBlock x:Name="bellTitleBlock" Text="The Third Bell" FontSize="30" HorizontalAlignment="Left" FontFamily="Segoe UI" />

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="0[minutes]-"/>
                                <TextBlock Text="{x:Bind  ViewModel.TimesIndex3, Mode=OneWay}" />
                                <TextBlock Text="[minutes]"/>
                            </StackPanel>

                              <TimePicker x:Name="thirdTime" Header="Third Section" Time="{x:Bind ViewModel.ThirdTimeSpan, Mode=TwoWay}"  Margin="0,0,0,4" />
-->
                            <ListView SelectionMode="None" Header="三回目のベル" FontSize="20"  Margin="0,0,0,10">
                                <ComboBox x:Name="bellThird" SelectedItem="{x:Bind ViewModel.EndBellIndex2, Mode=TwoWay}"></ComboBox>
                                <ComboBox x:Name="timeThird" SelectedItem="{x:Bind ViewModel.TimesIndex3, Mode=TwoWay}"></ComboBox>

                                <TextBox x:Name="thirdText" x:Uid="ThirdTitle" Text="{x:Bind ViewModel.ThirdTitle, Mode=TwoWay}" Header="!タイトルを入力してください。" HorizontalAlignment="Left" Width="300"/>


                                <ComboBox x:Name="colorCombo3" Margin="0,20,0,0" SelectedIndex="{x:Bind ViewModel.ColorsIndex2, Mode=TwoWay}" 
                         x:Uid="ColorInput" Header="!文字色を設定します" >
                                    <ComboBoxItem Content="Green" Foreground="Green"/>
                                    <ComboBoxItem Content="Yellow" Foreground="Yellow"/>
                                    <ComboBoxItem Content="Red" Foreground="Red"/>
                                </ComboBox>

                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="colorPickerButton3" Content="文字色の選択" >
                                        <Button.Flyout>
                                            <Flyout>
                                                <ColorPicker x:Name="myColorPicker3" IsColorChannelTextInputVisible="False"
                                                    IsHexInputVisible="False" ColorChanged="myColorPicker_ColorChanged" Color="{x:Bind ViewModel.LabelColor3, Mode=TwoWay}" />
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>
                                    <TextBlock Text="サンプル" FontSize="20" Foreground="{x:Bind ViewModel.LabelColor3, Converter={StaticResource Color2BrushConverter}, Mode=OneWay}"/>
                                </StackPanel>

                            </ListView>

                        </StackPanel>

                        <!--
                        <ToggleButton x:Name="advancedSettingButton"  Content="Advanced Settings" HorizontalAlignment="Center" Margin="0,20,0,0"/>
                        -->
                    </StackPanel>


                </ScrollViewer>
            </SplitView.Pane>
        </SplitView>

        <SplitView x:Name="advancedSettingSplitView"
                   IsPaneOpen="{Binding IsChecked, ElementName=advancedSettingButton, Mode=TwoWay}"
                   DisplayMode="CompactOverlay"
                   PanePlacement="Left"
                   CompactPaneLength ="0"
                   OpenPaneLength="320">
            <SplitView.Pane>

                <ScrollViewer Margin="0,0,0.0,50">
                    <StackPanel>

                        <TextBlock Text="-----------------------------------------------" />


                        <TextBlock Text="-----------------------------------------------" />
                        <TextBlock x:Uid="FirstSetting" Text="First Section" Margin="0,0,0,0" HorizontalAlignment="Left"/>


                        <!--
                        
                        <TimePicker x:Name="firstTimeA" Header="preFirst（予鈴）" Time="{x:Bind ViewModel.FirstTimeSpan, Mode=TwoWay}"  />
                        <ComboBox x:Name="prebellCombo1" x:Uid="PreBelllIndex"  Header="鳴らすベルの回数" SelectedValuePath="Content" SelectedValue="{x:Bind ViewModel.PreBellValue, Mode=TwoWay}"
                          SelectedIndex="{x:Bind ViewModel.PreBellIndex, Mode=TwoWay}"  >
                            <ComboBoxItem Content="0"/>
                            <ComboBoxItem Content="1"/>
                            <ComboBoxItem Content="2"/>
                            <ComboBoxItem Content="3"/>
                            <ComboBoxItem Content="4"/>
                            <ComboBoxItem Content="5"/>
                        </ComboBox>

                        <TimePicker x:Name="secondTimeA" Header="First（一段階）" Time="{x:Bind ViewModel.SecondTimeSpan, Mode=TwoWay}"/>
                        <ComboBox x:Name="bellCombo_end1" x:Uid="BellInput" Header="予鈴のベルの回数" 
                        SelectedIndex="{x:Bind ViewModel.EndBellIndex, Mode=TwoWay}"   >
                            <ComboBoxItem Content="1"/>
                            <ComboBoxItem Content="2"/>
                            <ComboBoxItem Content="3"/>
                            <ComboBoxItem Content="4"/>
                            <ComboBoxItem Content="5"/>
                        </ComboBox>
                        -->


                        <TextBlock Text="-----------------------------------------------" Margin="0,20,0,0" />
                        <TextBlock x:Uid="SecondSetting" Text="Second Section" Margin="0,0,0,0" HorizontalAlignment="Left"/>


                        <!--
                        <TimePicker x:Name="thirdTimeA" Header="Third" Time="{x:Bind ViewModel.ThirdTimeSpan, Mode=TwoWay}" />

                        <ComboBox x:Name="bellCombo_end2" Margin="0,20,0,0" x:Uid="BellInput" Header="!終了時にベルを何回ならしますか？" SelectedIndex="{x:Bind ViewModel.EndBellIndex2, Mode=TwoWay}">
                            <ComboBoxItem Content="1"/>
                            <ComboBoxItem Content="2"/>
                            <ComboBoxItem Content="3"/>
                            <ComboBoxItem Content="4"/>
                            <ComboBoxItem Content="5"/>
                        </ComboBox>

                        -->

                        <TextBlock Text="-----------------------------------------------" Margin="0,20,0,0" />
                        <TextBlock x:Uid="ThirdSetting" Text="Third Section" HorizontalAlignment="Left"/>


                        <ToggleButton x:Name="viewModeToggle" VerticalAlignment="Bottom"
                  Padding="10,5,9,4" Click="viewModeToggle_Click">
                            <FontIcon Glyph="&#xE17C;" />
                        </ToggleButton>

                    </StackPanel>
                </ScrollViewer>
            </SplitView.Pane>
        </SplitView>

        <CommandBar VerticalAlignment="Bottom" DefaultLabelPosition="Right" >

            <!--E8B9
            -->

            <AppBarButton x:Name="pinpButton" Visibility="Collapsed" Click="pinpButton_Click" Label="固定">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8B9;" />
            </AppBarButton>

            <AppBarButton x:Name="standardButton" Visibility="Collapsed" Click="standard" Label="戻す">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE8B9;" />
            </AppBarButton>

            <AppBarButton x:Name="backToWindowsButton" x:Uid="btw" Label="全画面解除" Visibility="Collapsed" Click="backToWindowsButton_Click">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE73F;" />
            </AppBarButton>

            <AppBarButton x:Name="fullScreenButton" x:Uid="fs" Label="全画面化"  Click="fullScreenButton_Click">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE740;" />
            </AppBarButton>

            <!--
            <AppBarButton x:Name="stopButton" x:Uid="Stop" Label="終了" Click="stopButton_Click" >
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE711;" />
            </AppBarButton>
            -->

            <AppBarButton x:Name="startButton" x:Uid="Start" Label="開始"   Click="startButton_Click"  >
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE768;" />
            </AppBarButton>

            <AppBarButton x:Name="pauseButton" x:Uid="Pause"  Label="一次停止" Visibility="Collapsed" Click="pauseButton_Click">
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE769;" />
            </AppBarButton>

            <AppBarButton x:Name="Button" x:Uid="Reset" Label="リセット" Click="resetButton_Click"  >
                <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE72C;" />
            </AppBarButton>

            <!--
            <AppBarToggleButton Icon="Shuffle" Label="Shuffle" Click="AppBarButton_Click" />
            <AppBarToggleButton Icon="RepeatAll" Label="Repeat" Click="AppBarButton_Click"/>
            <AppBarSeparator/>
            <AppBarButton Icon="Back" Label="Back" Click="AppBarButton_Click"/>
            <AppBarButton Icon="Stop" Label="Stop" Click="AppBarButton_Click"/>
            <AppBarButton Icon="Play" Label="Play" Click="AppBarButton_Click"/>
            <AppBarButton Icon="Forward" Label="Forward" Click="AppBarButton_Click"/>
            -->

            <CommandBar.Content>
                <AppBarToggleButton x:Name="settingButton" Icon="Setting" />
            </CommandBar.Content>

        </CommandBar>


        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="WindowStates">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="501" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="infoBlock.FontSize" Value="100" />
                        <Setter Target="timeBlock.FontSize" Value="200" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="WideState2">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="infoBlock.FontSize" Value="100" />
                        <Setter Target="timeBlock.FontSize" Value="200" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState2">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="infoBlock.FontSize" Value="70" />
                        <Setter Target="timeBlock.FontSize" Value="140" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowHeight="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="infoBlock.FontSize" Value="70" />
                        <Setter Target="timeBlock.FontSize" Value="140" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>


    </Grid>
</Page>
